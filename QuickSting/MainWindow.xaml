<Window x:Class="QuickSting.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:QuickSting"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:blend="http://schemas.microsoft.com/expression/2010/interactivity"
        Title="" 
        Icon="Images/lighting_icon.png"
        Height="300" 
        Width="200"
        AllowsTransparency="True" 
        Background="Transparent" 
        WindowStyle="None"
        ResizeMode="NoResize"
        ShowInTaskbar="True"
        Loaded="Window_Loaded" 
        MouseDown="Window_MouseDown" 
        Closed="Window_Closed">
    
    <Window.Resources>

        <ControlTemplate x:Key="ScrollViewerControlTemplate" 
                         TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid" 
                  Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Corner" 
                           Grid.Column="1" 
                           Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                           Grid.Row="1"/>
                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                        CanContentScroll="{TemplateBinding CanContentScroll}" 
                                        CanHorizontallyScroll="False" 
                                        CanVerticallyScroll="False" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        Content="{TemplateBinding Content}" 
                                        Grid.RowSpan="2" 
                                        Margin="{TemplateBinding Padding}" 
                                        Grid.ColumnSpan="2"/>
                <ScrollBar x:Name="PART_VerticalScrollBar" 
                           AutomationProperties.AutomationId="VerticalScrollBar" 
                           Cursor="Arrow" 
                           Grid.Column="1" 
                           Maximum="{TemplateBinding ScrollableHeight}" 
                           Minimum="0" 
                           Grid.Row="0" 
                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                           Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                           ViewportSize="{TemplateBinding ViewportHeight}" 
                           Width="8"/>
                <ScrollBar x:Name="PART_HorizontalScrollBar" 
                           AutomationProperties.AutomationId="HorizontalScrollBar" 
                           Cursor="Arrow" 
                           Grid.Column="0" 
                           Maximum="{TemplateBinding ScrollableWidth}" 
                           Minimum="0" 
                           Orientation="Horizontal" 
                           Grid.Row="1" 
                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                           ViewportSize="{TemplateBinding ViewportWidth}" 
                           Height="8"/>
            </Grid>
        </ControlTemplate>
        
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" 
                                   Height="{TemplateBinding Height}" 
                                   Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="HorizontalThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="4" />
                            </Grid.ColumnDefinitions>
                            <Ellipse Grid.Column="0" 
                                     Grid.ColumnSpan="2" 
                                     Fill="#FFF4F4F5" />
                            <Rectangle Grid.Column="1" 
                                       Grid.ColumnSpan="3" 
                                       Fill="#FFF4F4F5" />
                            <Ellipse Grid.Column="3" 
                                     Grid.ColumnSpan="2" 
                                     Fill="#FFF4F4F5" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="VerticalThumb" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="4" />
                                <RowDefinition Height="4" />
                                <RowDefinition />
                                <RowDefinition Height="4" />
                                <RowDefinition Height="4" />
                            </Grid.RowDefinitions>
                            <Ellipse Grid.Row="0" 
                                     Grid.RowSpan="2" 
                                     Fill="#FFF4F4F5" />
                            <Rectangle Grid.Row="1" 
                                       Grid.RowSpan="3" 
                                       Fill="#FFF4F4F5" />
                            <Ellipse Grid.Row="3" 
                                     Grid.RowSpan="2" 
                                     Fill="#FFF4F4F5" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="MinWidth" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" 
                              SnapsToDevicePixels="true" 
                              Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*"/>
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track" 
                                   IsDirectionReversed="true" 
                                   IsEnabled="{TemplateBinding IsMouseOver}" 
                                   Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource ScrollBarPageButton}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource VerticalThumb}" 
                                           Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" 
                                           Width="8"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="10"/>
                    <Setter Property="MinHeight" Value="10"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" 
                                      SnapsToDevicePixels="true"
                                      Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.00001*"/>
                                    </Grid.ColumnDefinitions>
                                    <Track x:Name="PART_Track" 
                                           Grid.Column="1" 
                                           IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" 
                                                          Style="{StaticResource ScrollBarPageButton}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" 
                                                          Style="{StaticResource ScrollBarPageButton}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper" 
                                                   Style="{DynamicResource HorizontalThumb}" 
                                                   Height="8"/>
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        
    </Window.Resources>
    
    <Grid RenderTransformOrigin="0,1">

        <Border BorderThickness="1" 
                Background="Black" 
                BorderBrush="White" 
                CornerRadius="10" 
                Padding="2">
            
            <Grid HorizontalAlignment="Stretch" ShowGridLines="False">
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="2*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                
                <StackPanel Grid.Row="0" 
                            Grid.Column="0" 
                            Orientation="Horizontal">
                    <Button x:Name="btnNotify"
                            Height="16" 
                            Width="16"
                            Margin="2,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top" 
                            Click="btnNotify_Click">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False"></Condition>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:MainWindow}, Path=HostCollection.IsPaused}" Value="False"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="img" 
                                                Property="Image.Source" 
                                                Value="Images/notify.png"></Setter>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False"></Condition>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:MainWindow}, Path=HostCollection.IsPaused}" Value="True"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="img" 
                                                Property="Image.Source" 
                                                Value="Images/no_notify.png"></Setter>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"></Condition>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:MainWindow}, Path=HostCollection.IsPaused}" Value="False"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="img" 
                                                Property="Image.Source" 
                                                Value="Images/act_notify.png"></Setter>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"></Condition>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:MainWindow}, Path=HostCollection.IsPaused}" Value="True"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="img" 
                                                Property="Image.Source" 
                                                Value="Images/act_no_notify.png"></Setter>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                                <Image Source="Images/notify.png" x:Name="img"></Image>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                </StackPanel>
                
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Top"
                            Grid.Column="1"
                            Grid.Row="0">
                    <TextBlock Foreground="White" 
                               FontWeight="Bold" 
                               FontSize="16"
                               Text="{Binding RelativeSource={RelativeSource AncestorType=local:MainWindow}, Path=SiteName}"
                               HorizontalAlignment="Center"></TextBlock>
                    <Button x:Name="btnSiteDetails"
                            Height="15" 
                            Width="15"
                            Margin="2,0"
                            Padding="0,0,0,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center" 
                            Click="btnSiteDetails_Click">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False">
                                        <Setter TargetName="img" 
                                                    Property="Image.Source" 
                                                    Value="Images/dropdown.png"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True">
                                        <Setter TargetName="img" 
                                                    Property="Image.Source" 
                                                    Value="Images/act_dropdown.png"></Setter>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                                <Image Source="Images/round_minus.png" x:Name="img"></Image>
                            </ControlTemplate>
                        </Button.Template>
                        <Button.ContextMenu>
                            <ContextMenu x:Name="ctxSiteDetails">
                                <MenuItem x:Name="ctxSiteDetails_StorePictures" 
                                          Header="Store Pictures" 
                                          Click="ctxSiteDetails_StorePictures_Click">
                                    <MenuItem.Icon>
                                        <Image Source="Images/site_pics.png"
                                               Height="16"
                                               Width="16"></Image>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem x:Name="ctxSiteDetails_CallStore" 
                                          Header="Call Store" 
                                          Click="ctxSiteDetails_CallStore_Click">
                                    <MenuItem.Icon>
                                        <Image Source="Images/site_phone.png"
                                               Height="16"
                                               Width="16"></Image>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem x:Name="ctxSiteDetails_EmailStore" 
                                          Header="E-Mail Store" 
                                          Click="ctxSiteDetails_EmailStore_Click">
                                    <MenuItem.Icon>
                                        <Image Source="Images/site_mail.png"
                                               Height="16"
                                               Width="16"></Image>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                </StackPanel>


                <StackPanel Grid.Row="0" 
                            Grid.Column="2" 
                            Orientation="Horizontal" 
                            HorizontalAlignment="Right">

                    <Button x:Name="btnMinimize"
                            Height="16" 
                            Width="16"
                            Margin="2,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top" 
                            Click="btnMinimize_Click">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False">
                                        <Setter TargetName="img" 
                                                Property="Image.Source" 
                                                Value="Images/round_minus.png"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True">
                                        <Setter TargetName="img" 
                                                Property="Image.Source" 
                                                Value="Images/act_round_minus.png"></Setter>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                                <Image Source="Images/round_minus.png" x:Name="img"></Image>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>

                    <Button x:Name="btnClose"
                            Height="16" 
                            Width="16"
                            Margin="2,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top" 
                            Click="btnClose_Click">
                        <Button.Template>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False">
                                        <Setter TargetName="img" 
                                                Property="Image.Source" 
                                                Value="Images/round_delete.png"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True">
                                        <Setter TargetName="img" 
                                                Property="Image.Source" 
                                                Value="Images/act_round_delete.png"></Setter>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                                <Image Source="Images/round_delete.png" x:Name="img"></Image>
                            </ControlTemplate>
                        </Button.Template>
                    </Button>
                    
                </StackPanel>

                <ScrollViewer VerticalScrollBarVisibility="Auto" 
                              VerticalAlignment="Stretch" 
                              HorizontalAlignment="Stretch" 
                              Grid.Column="0" 
                              Grid.Row="1" 
                              Grid.ColumnSpan="3"
                              Template="{DynamicResource ScrollViewerControlTemplate}"
                              CanContentScroll="False"
                              PanningMode="HorizontalOnly"
                              SnapsToDevicePixels="True"
                              Background="Transparent">
                    
                    <ListBox x:Name="lstHosts" 
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                             Background="Transparent" 
                             BorderBrush="Transparent" 
                             Focusable="False">

                        <blend:Interaction.Behaviors>
                            <local:BubbleScrollEvent />
                        </blend:Interaction.Behaviors>

                        <ListBox.Resources>
                            <Style x:Key="SiteGroupContainerStyle" TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Expander IsExpanded="False" Collapsed="Expander_Collapsed" Expanded="Expander_Expanded">
                                                <Expander.Template>
                                                    <ControlTemplate TargetType="{x:Type Expander}">
                                                        <Border>
                                                            <DockPanel>
                                                                <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
                                                                    <ToggleButton x:Name="HeaderSite"
                                                                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                                                        <ToggleButton.Template>
                                                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                <ControlTemplate.Triggers>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False"></Condition>
                                                                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=IsExpanded}" Value="False"></Condition>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter TargetName="img" 
                                                                                                Property="Image.Source" 
                                                                                                Value="Images/arrow_right.png"></Setter>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"></Condition>
                                                                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=IsExpanded}" Value="False"></Condition>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter TargetName="img" 
                                                                                                Property="Image.Source" 
                                                                                                Value="Images/act_arrow_right.png"></Setter>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False"></Condition>
                                                                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=IsExpanded}" Value="True"></Condition>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter TargetName="img" 
                                                                                                Property="Image.Source" 
                                                                                                Value="Images/arrow_down.png"></Setter>
                                                                                    </MultiDataTrigger>
                                                                                    <MultiDataTrigger>
                                                                                        <MultiDataTrigger.Conditions>
                                                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"></Condition>
                                                                                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=IsExpanded}" Value="True"></Condition>
                                                                                        </MultiDataTrigger.Conditions>
                                                                                        <Setter TargetName="img" 
                                                                                                Property="Image.Source" 
                                                                                                Value="Images/act_arrow_down.png"></Setter>
                                                                                    </MultiDataTrigger>
                                                                                </ControlTemplate.Triggers>
                                                                                <Image Source="Images/arrow_right.png" x:Name="img" Height="20" Width="20"></Image>
                                                                            </ControlTemplate>
                                                                        </ToggleButton.Template>
                                                                    </ToggleButton>
                                                                    <ContentPresenter Content="{TemplateBinding Header}"
                                                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                                                      Margin="10,0,0,0"></ContentPresenter>
                                                                </StackPanel>

                                                                <ContentPresenter x:Name="ExpandSite" 
                                                                                  Visibility="Collapsed"
                                                                                  Margin="{TemplateBinding Padding}"
                                                                                  Focusable="false" />
                                                            </DockPanel>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsExpanded" Value="true">
                                                                <Setter Property="Visibility" Value="Visible" TargetName="ExpandSite"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="false">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Expander.Template>
                                                <Expander.Header>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{Binding Name}" 
                                                                   FontWeight="Bold" 
                                                                   Foreground="White" 
                                                                   FontSize="14" 
                                                                   VerticalAlignment="Center"></TextBlock>
                                                    </StackPanel>
                                                </Expander.Header>
                                                <ItemsPresenter />
                                            </Expander>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="DefaultGroupContainerStyle" TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <ItemsPresenter />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.Resources>

                        <ListBox.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.ContainerStyleSelector>
                                    <local:GroupStyleSelector DefaultStyle="{StaticResource DefaultGroupContainerStyle}" 
                                                          GroupStyle="{StaticResource SiteGroupContainerStyle}"></local:GroupStyleSelector>
                                </GroupStyle.ContainerStyleSelector>
                            </GroupStyle>
                        </ListBox.GroupStyle>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Padding" Value="2,0,0,0"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            
                                            <Border x:Name="Bd" 
                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                                    Background="{TemplateBinding Background}" 
                                                    Padding="{TemplateBinding Padding}" 
                                                    SnapsToDevicePixels="true">
                                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Border>
                                            
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsSelected" Value="true">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                    <Setter Property="Background" Value="Transparent"></Setter>
                                                </Trigger>

                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                    <Setter Property="Background" Value="Transparent"></Setter>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                            
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>

                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel>
                                    <blend:Interaction.Behaviors>
                                        <local:BubbleScrollEvent />
                                    </blend:Interaction.Behaviors>
                                </WrapPanel>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <DataTemplate.Resources>
                                    <Style TargetType="{x:Type ToolTip}">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToolTip">
                                                    <Border Background="Black">
                                                        <TextBlock FontFamily="Tahoma" 
                                                                   FontSize="11" 
                                                                   Foreground="WhiteSmoke"
                                                                   Padding="2"
                                                                   Text="{TemplateBinding Content}" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content}" Value="">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataTemplate.Resources>
                                <Border Margin="5,1" 
                                        BorderThickness="0" 
                                        BorderBrush="Gray" 
                                        CornerRadius="10"
                                        Height="50">
                                    <Grid>
                                        <blend:Interaction.Behaviors>
                                            <local:BubbleScrollEvent />
                                        </blend:Interaction.Behaviors>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="20"></RowDefinition>
                                            <RowDefinition Height="30"></RowDefinition>
                                        </Grid.RowDefinitions>
                                        
                                        <TextBlock Grid.Row="0" 
                                                   Grid.Column="0"
                                                   HorizontalAlignment="Center" 
                                                   Text="{Binding Path=Name}"
                                                   FontSize="12"
                                                   FontWeight="Thin"
                                                   Foreground="White"
                                                   TextWrapping="WrapWithOverflow"
                                                   TextTrimming="CharacterEllipsis"
                                                   ToolTip="{Binding Path=Description}">
                                        </TextBlock>

                                        <Button x:Name="imgStatus" 
                                                Grid.Row="1"
                                                Grid.Column="0" 
                                                VerticalAlignment="Center" 
                                                HorizontalAlignment="Center"
                                                Width="20"
                                                Height="20"
                                                ContextMenu="{Binding HostControls}">
                                            <Button.ToolTip>
                                                <ToolTip Content="{Binding HostToolTip}">
                                                    <ToolTip.Style>
                                                        <Style TargetType="{x:Type ToolTip}">
                                                            <Setter Property="Visibility" Value="Visible" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="ToolTip">
                                                                        <Border Background="Black">
                                                                            <ContentPresenter Content="{TemplateBinding Content}"></ContentPresenter>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content}" Value="{x:Null}">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Content}" Value="">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ToolTip.Style>
                                                </ToolTip>
                                            </Button.ToolTip>
                                            <Button.Template>
                                                <ControlTemplate TargetType="{x:Type Button}">
                                                    <ControlTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding HostStatus}" Value="1">
                                                            <Setter Property="Image.Source" TargetName="img" Value="Images/status_up.png"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HostStatus}" Value="2">
                                                            <Setter Property="Image.Source" TargetName="img" Value="Images/status_down.png"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HostStatus}" Value="3">
                                                            <Setter Property="Image.Source" TargetName="img" Value="Images/status_bad.png"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HostStatus}" Value="4">
                                                            <Setter Property="Image.Source" TargetName="img" Value="Images/status_unknown.png"/>
                                                        </DataTrigger>
                                                    </ControlTemplate.Triggers>
                                                    <Image x:Name="img"></Image>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        
                                    </Grid>
                                </Border>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </ScrollViewer>


            </Grid>
        </Border>

        <Grid.RenderTransform>
            <ScaleTransform ScaleY="1" />
        </Grid.RenderTransform>

    </Grid>
</Window>
