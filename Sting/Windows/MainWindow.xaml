<!--
    
    Copyright 2014, Bryan Stockus
    
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
    
-->
    
    <Window x:Class="Sting.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Sting.Windows"
        Icon="../Images/lighting_icon.png"
        Title="Sting" Height="350" Width="525" Loaded="Window_Loaded" MinWidth="525" MinHeight="350" Closing="Window_Closing">
    <Window.Resources>
        <DrawingImage x:Key="ResumeImage">
            <DrawingImage.Drawing>
                <DrawingGroup xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                    <DrawingGroup x:Name="DrawingLayer">
                        <DrawingGroup.ClipGeometry>
                            <RectangleGeometry Rect="0,0,42,41" />
                        </DrawingGroup.ClipGeometry>
                        <GeometryDrawing x:Name="path1307" Brush="#000000">
                            <GeometryDrawing.Geometry>
                                <PathGeometry FillRule="Nonzero" Figures="M41.596238,20.522C41.598847,31.848472 32.419858,41.031776 21.0961,41.031776 9.7723411,41.031776 0.59335239,31.848472 0.59596119,20.522 0.59335239,9.1955302 9.7723411,0.012225663 21.0961,0.012225663 32.419858,0.012225663 41.598847,9.1955302 41.596238,20.522L41.596238,20.522z" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <DrawingGroup x:Name="g2095" Transform="0.6567274,0,0,0.5900984,-47.466632,-35.594698">
                            <DrawingGroup x:Name="g3490" Transform="1,0,0,1,37.683594,0">
                                <DrawingGroup x:Name="g3480">
                                    <DrawingGroup x:Name="g3469">
                                        <GeometryDrawing x:Name="rect3359">
                                            <GeometryDrawing.Brush>
                                                <SolidColorBrush Color="#FFFFFFFF" Opacity="0.35135133" />
                                            </GeometryDrawing.Brush>
                                            <GeometryDrawing.Geometry>
                                                <PathGeometry FillRule="Nonzero" Figures="M64.0625,84.875L57.5,85.46875 57.5,87.5 67.0625,86.625 64.0625,84.875z" />
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                        <GeometryDrawing x:Name="rect3361">
                                            <GeometryDrawing.Brush>
                                                <SolidColorBrush Color="#FFFFFFFF" Opacity="0.35135133" />
                                            </GeometryDrawing.Brush>
                                            <GeometryDrawing.Geometry>
                                                <PathGeometry FillRule="Nonzero" Figures="M70.0625,88.34375L57.5,89.5 57.5,92.5 74.5625,90.9375 70.0625,88.34375z" />
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                        <GeometryDrawing x:Name="rect3365">
                                            <GeometryDrawing.Brush>
                                                <SolidColorBrush Color="#FFFFFFFF" Opacity="0.35135133" />
                                            </GeometryDrawing.Brush>
                                            <GeometryDrawing.Geometry>
                                                <PathGeometry FillRule="Nonzero" Figures="M70.59375,101.34375L57.5,102.5625 57.5,108.90625 70.59375,101.34375z" />
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingGroup>
                                    <GeometryDrawing x:Name="path2479" Brush="#FFFFFFFF">
                                        <GeometryDrawing.Geometry>
                                            <PathGeometry FillRule="Nonzero" Figures="M57.49988,108.90574L57.49988,81.094255 81.603167,94.999998 57.49988,108.90574z" />
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>
                                    <GeometryDrawing x:Name="path2481" Brush="#FFFFFFFF">
                                        <GeometryDrawing.Geometry>
                                            <PathGeometry FillRule="Nonzero" Figures="M57.99988,81.96874L57.99988,108.03124 80.59363,94.99999 57.99988,81.96874z M58.99988,83.71874L78.56238,94.99999 58.99988,106.28124 58.99988,83.71874z" />
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>
                                </DrawingGroup>
                            </DrawingGroup>
                        </DrawingGroup>
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="PauseImage">
            <DrawingImage.Drawing>
                <DrawingGroup xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                    <DrawingGroup x:Name="DrawingLayer1">
                        <DrawingGroup.ClipGeometry>
                            <RectangleGeometry Rect="0,0,42,41" />
                        </DrawingGroup.ClipGeometry>
                        <GeometryDrawing x:Name="path13071" Brush="#000000">
                            <GeometryDrawing.Geometry>
                                <PathGeometry FillRule="Nonzero" Figures="M41.596278,20.522224C41.598887,31.848696 32.419898,41.032 21.09614,41.032 9.7723805,41.032 0.59339176,31.848696 0.59600056,20.522224 0.59339176,9.195753 9.7723805,0.0124489 21.09614,0.0124489 32.419898,0.0124489 41.598887,9.195753 41.596278,20.522224L41.596278,20.522224z" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <GeometryDrawing x:Name="path2484" Brush="#FFFFFFFF">
                            <GeometryDrawing.Pen>
                                <Pen Brush="#FFFFFFFF" Thickness="2.58648634" StartLineCap="Square" EndLineCap="Square" LineJoin="Miter" />
                            </GeometryDrawing.Pen>
                            <GeometryDrawing.Geometry>
                                <PathGeometry FillRule="EvenOdd" Figures="M24.677497,13.54945L24.677497,28.067094 26.461245,28.067094 26.461245,13.54945 24.677497,13.54945z M27.576088,13.54945L27.576088,28.067094 29.359836,28.067094 29.359836,13.54945 27.576088,13.54945z" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <GeometryDrawing x:Name="path2738" Brush="#FFFFFFFF">
                            <GeometryDrawing.Pen>
                                <Pen Brush="#FFFFFFFF" Thickness="2.58648634" StartLineCap="Square" EndLineCap="Square" LineJoin="Miter" />
                            </GeometryDrawing.Pen>
                            <GeometryDrawing.Geometry>
                                <PathGeometry FillRule="EvenOdd" Figures="M11.92163,13.54945L11.92163,28.067094 13.705378,28.067094 13.705378,13.54945 11.92163,13.54945z M14.82022,13.54945L14.82022,28.067094 16.603969,28.067094 16.603969,13.54945 14.82022,13.54945z" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <DrawingGroup x:Name="layer3" Transform="1,0,0,1,-2.9090515,-3.478068" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="ActiveResumeImage">
            <DrawingImage.Drawing>
                <DrawingGroup xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                    <DrawingGroup x:Name="xDrawingLayer">
                        <DrawingGroup.ClipGeometry>
                            <RectangleGeometry Rect="0,0,42,41" />
                        </DrawingGroup.ClipGeometry>
                        <GeometryDrawing x:Name="xpath1307" Brush="#FF2268C9">
                            <GeometryDrawing.Geometry>
                                <PathGeometry FillRule="Nonzero" Figures="M41.596238,20.522C41.598847,31.848472 32.419858,41.031776 21.0961,41.031776 9.7723411,41.031776 0.59335239,31.848472 0.59596119,20.522 0.59335239,9.1955302 9.7723411,0.012225663 21.0961,0.012225663 32.419858,0.012225663 41.598847,9.1955302 41.596238,20.522L41.596238,20.522z" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <DrawingGroup x:Name="xg2095" Transform="0.6567274,0,0,0.5900984,-47.466632,-35.594698">
                            <DrawingGroup x:Name="xg3490" Transform="1,0,0,1,37.683594,0">
                                <DrawingGroup x:Name="xg3480">
                                    <DrawingGroup x:Name="xg3469">
                                        <GeometryDrawing x:Name="xrect3359">
                                            <GeometryDrawing.Brush>
                                                <SolidColorBrush Color="#FFFFFFFF" Opacity="0.35135133" />
                                            </GeometryDrawing.Brush>
                                            <GeometryDrawing.Geometry>
                                                <PathGeometry FillRule="Nonzero" Figures="M64.0625,84.875L57.5,85.46875 57.5,87.5 67.0625,86.625 64.0625,84.875z" />
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                        <GeometryDrawing x:Name="xrect3361">
                                            <GeometryDrawing.Brush>
                                                <SolidColorBrush Color="#FFFFFFFF" Opacity="0.35135133" />
                                            </GeometryDrawing.Brush>
                                            <GeometryDrawing.Geometry>
                                                <PathGeometry FillRule="Nonzero" Figures="M70.0625,88.34375L57.5,89.5 57.5,92.5 74.5625,90.9375 70.0625,88.34375z" />
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                        <GeometryDrawing x:Name="xrect3365">
                                            <GeometryDrawing.Brush>
                                                <SolidColorBrush Color="#FFFFFFFF" Opacity="0.35135133" />
                                            </GeometryDrawing.Brush>
                                            <GeometryDrawing.Geometry>
                                                <PathGeometry FillRule="Nonzero" Figures="M70.59375,101.34375L57.5,102.5625 57.5,108.90625 70.59375,101.34375z" />
                                            </GeometryDrawing.Geometry>
                                        </GeometryDrawing>
                                    </DrawingGroup>
                                    <GeometryDrawing x:Name="xpath2479" Brush="#FFFFFFFF">
                                        <GeometryDrawing.Geometry>
                                            <PathGeometry FillRule="Nonzero" Figures="M57.49988,108.90574L57.49988,81.094255 81.603167,94.999998 57.49988,108.90574z" />
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>
                                    <GeometryDrawing x:Name="xpath2481" Brush="#FFFFFFFF">
                                        <GeometryDrawing.Geometry>
                                            <PathGeometry FillRule="Nonzero" Figures="M57.99988,81.96874L57.99988,108.03124 80.59363,94.99999 57.99988,81.96874z M58.99988,83.71874L78.56238,94.99999 58.99988,106.28124 58.99988,83.71874z" />
                                        </GeometryDrawing.Geometry>
                                    </GeometryDrawing>
                                </DrawingGroup>
                            </DrawingGroup>
                        </DrawingGroup>
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        <DrawingImage x:Key="ActivePauseImage">
            <DrawingImage.Drawing>
                <DrawingGroup xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                    <DrawingGroup x:Name="xDrawingLayer1">
                        <DrawingGroup.ClipGeometry>
                            <RectangleGeometry Rect="0,0,42,41" />
                        </DrawingGroup.ClipGeometry>
                        <GeometryDrawing x:Name="xpath13071" Brush="#FF2268C9">
                            <GeometryDrawing.Geometry>
                                <PathGeometry FillRule="Nonzero" Figures="M41.596278,20.522224C41.598887,31.848696 32.419898,41.032 21.09614,41.032 9.7723805,41.032 0.59339176,31.848696 0.59600056,20.522224 0.59339176,9.195753 9.7723805,0.0124489 21.09614,0.0124489 32.419898,0.0124489 41.598887,9.195753 41.596278,20.522224L41.596278,20.522224z" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <GeometryDrawing x:Name="xpath2484" Brush="#FFFFFFFF">
                            <GeometryDrawing.Pen>
                                <Pen Brush="#FFFFFFFF" Thickness="2.58648634" StartLineCap="Square" EndLineCap="Square" LineJoin="Miter" />
                            </GeometryDrawing.Pen>
                            <GeometryDrawing.Geometry>
                                <PathGeometry FillRule="EvenOdd" Figures="M24.677497,13.54945L24.677497,28.067094 26.461245,28.067094 26.461245,13.54945 24.677497,13.54945z M27.576088,13.54945L27.576088,28.067094 29.359836,28.067094 29.359836,13.54945 27.576088,13.54945z" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <GeometryDrawing x:Name="xpath2738" Brush="#FFFFFFFF">
                            <GeometryDrawing.Pen>
                                <Pen Brush="#FFFFFFFF" Thickness="2.58648634" StartLineCap="Square" EndLineCap="Square" LineJoin="Miter" />
                            </GeometryDrawing.Pen>
                            <GeometryDrawing.Geometry>
                                <PathGeometry FillRule="EvenOdd" Figures="M11.92163,13.54945L11.92163,28.067094 13.705378,28.067094 13.705378,13.54945 11.92163,13.54945z M14.82022,13.54945L14.82022,28.067094 16.603969,28.067094 16.603969,13.54945 14.82022,13.54945z" />
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <DrawingGroup x:Name="xlayer3" Transform="1,0,0,1,-2.9090515,-3.478068" />
                    </DrawingGroup>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
    </Window.Resources>
    <DockPanel>
        <ToolBar x:Name="tbMain" DockPanel.Dock="Top" ToolBarTray.IsLocked="True" Loaded="tbMain_Loaded">
            <ToolBar.Resources>
                <Style TargetType="{x:Type ToolBarPanel}">
                    <Setter Property="Orientation" Value="Vertical"/>
                </Style>
            </ToolBar.Resources>
            <DockPanel>
                <DockPanel.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"></Style>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}"></Style>
                    <Style TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"></Style>
                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Static ToolBar.TextBoxStyleKey}}"></Style>
                </DockPanel.Resources>
                <Button x:Name="btnPauseAll" Click="btnPauseAll_Click" ToolTip="Pause All Hosts">
                    <Image x:Name="btnPauseAll_img" Height="20" Source="../Images/playback_pause_icon.png"></Image>
                </Button>
                <Button x:Name="btnNotifyToggle" Click="btnNotifyToggle_Click" ToolTip="Toggle Notifications">
                    <Image x:Name="btnNotifyToggle_img" Height="20" Source="../Images/eye_inv_icon.png"></Image>
                </Button>
                <Button x:Name="btnRemoveAllHosts" Click="btnRemoveAllHosts_Click" ToolTip="Remove All Hosts">
                    <Image x:Name="btnRemoveAllHosts_img" Height="20" Source="../Images/delete_icon.png"></Image>
                </Button>
                <Separator/>
                <Label>Ping Interval:</Label>
                <ComboBox x:Name="cboPingInterval" SelectedIndex="0" SelectionChanged="cboPingInterval_SelectionChanged">
                    <ComboBoxItem>1 sec</ComboBoxItem>
                    <ComboBoxItem>2 sec</ComboBoxItem>
                    <ComboBoxItem>3 sec</ComboBoxItem>
                    <ComboBoxItem>5 sec</ComboBoxItem>
                    <ComboBoxItem>10 sec</ComboBoxItem>
                    <ComboBoxItem>15 sec</ComboBoxItem>
                    <ComboBoxItem>30 sec</ComboBoxItem>
                    <ComboBoxItem>1 min</ComboBoxItem>
                </ComboBox>
                <Separator/>
                <Button x:Name="btnSettings" Click="btnSettings_Click" ToolTip="Settings">
                    <Image Height="20" Source="../Images/cogs_icon.png"></Image>
                </Button>
                <Button x:Name="btnAbout" ToolTip="About" Click="btnAbout_Click">
                    <Image Height="20" Source="../Images/info_icon.png"></Image>
                </Button>
                <TextBox x:Name="txtNewAddress" HorizontalAlignment="Right" KeyUp="txtNewAddress_KeyUp" MinWidth="200"></TextBox>
            </DockPanel>
        </ToolBar>
        <ScrollViewer VerticalScrollBarVisibility="Auto" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <ListBox x:Name="lstHosts" ScrollViewer.HorizontalScrollBarVisibility="Disabled">

                <ListBox.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                    <Style TargetType="{x:Type GroupItem}" x:Name="SiteGroupContainerStyle">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Expander IsExpanded="False" >
                                        <Expander.Header>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="Gray" FontSize="22" VerticalAlignment="Bottom" />
                                                <TextBlock Text="{Binding ItemCount}" FontSize="22" Foreground="Green" FontWeight="Bold" FontStyle="Italic" Margin="10,0,0,0" VerticalAlignment="Bottom" />
                                                <TextBlock Text=" host(s)" FontSize="22" Foreground="Silver" FontStyle="Italic" VerticalAlignment="Bottom" />
                                            </StackPanel>
                                        </Expander.Header>
                                        <ItemsPresenter />
                                    </Expander>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type GroupItem}" x:Name="DefaultGroupContainerStyle">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <ItemsPresenter />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </ListBox.Resources>

                <ListBox.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyleSelector>
                            <local:SiteGroupStyleSelector DefaultStyle="{StaticResource DefaultGroupContainerStyle}" SiteGroupStyle="{StaticResource SiteGroupContainerStyle}"></local:SiteGroupStyleSelector>
                        </GroupStyle.ContainerStyleSelector>


                    </GroupStyle>
                </ListBox.GroupStyle>

                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Padding" Value="2,0,0,0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                        </Trigger>
                                        
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel></WrapPanel>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border Margin="5" BorderThickness="1" BorderBrush="Gray" CornerRadius="10">
                            <Grid Height="160" Width="200" Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50"></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition Height="40"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Row="0" Grid.Column="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="25"></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="75"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="25"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0" 
                                           Grid.Column="0" 
                                           Grid.ColumnSpan="2" 
                                           HorizontalAlignment="Left" 
                                           Text="{Binding Path=Title}"
                                           FontSize="20"
                                           FontWeight="Bold"
                                           ToolTip="{Binding Path=Title}"
                                           TextTrimming="CharacterEllipsis"></TextBlock>
                                    <Button x:Name="btnRemoveHost"
                                            Height="20" 
                                            Width="20"
                                            Margin="2,0"
                                            Grid.Row="0"
                                            Grid.Column="2"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top" Click="btnRemoveHost_Click">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <ControlTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False">
                                                        <Setter TargetName="img" Property="Image.Source" Value="../Images/round_delete.png"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True">
                                                        <Setter TargetName="img" Property="Image.Source" Value="../Images/act_round_delete.png"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver}" Value="False">
                                                        <Setter TargetName="img" Property="Image.Visibility" Value="Collapsed"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver}" Value="True">
                                                        <Setter TargetName="img" Property="Image.Visibility" Value="Visible"></Setter>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                                <Image Source="../Images/round_delete.png" x:Name="img"></Image>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>

                                    <TextBlock Grid.Row="1" 
                                           Grid.Column="0"
                                           Grid.ColumnSpan="2"
                                           HorizontalAlignment="Left" 
                                           Text="{Binding Path=SubTitle}"
                                           FontSize="14"
                                           FontWeight="Thin"></TextBlock>
                                </Grid>
                                <Grid Grid.Row="1" Grid.Column="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="70"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="imgStatus" 
                                        Grid.Row="0"
                                        Grid.Column="0" 
                                        VerticalAlignment="Center" 
                                        HorizontalAlignment="Center"
                                        Width="60">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsHostUp}" Value="True"/>
                                                            <Condition Binding="{Binding IsPaused}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter TargetName="img" Property="Image.Source" Value="../Images/green_up_arrow.png"/>
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsHostUp}" Value="True"/>
                                                            <Condition Binding="{Binding IsPaused}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter TargetName="img" Property="Image.Visibility" Value="Collapsed"/>
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsHostUp}" Value="False"/>
                                                            <Condition Binding="{Binding IsPaused}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter TargetName="img" Property="Image.Source" Value="../Images/red_down_arrow.png"/>
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsHostUp}" Value="False"/>
                                                            <Condition Binding="{Binding IsPaused}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter TargetName="img" Property="Image.Visibility" Value="Collapsed"/>
                                                    </MultiDataTrigger>

                                                </ControlTemplate.Triggers>
                                                <Image x:Name="img"></Image>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                    <TextBlock x:Name="txtStatus"
                                               Grid.Row="0" 
                                               Grid.Column="1" 
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="20"
                                               FontWeight="Medium"
                                               Text="{Binding Path=Status}"></TextBlock>
                                </Grid>
                                <Grid Grid.Row="2" Grid.Column="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="30"></ColumnDefinition>
                                        <ColumnDefinition Width="80"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="txtDetails"
                                               Grid.Row="0"
                                               Grid.Column="0"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Bottom"
                                               FontSize="12"
                                               FontWeight="Light"
                                               FontStyle="Italic"
                                               Text="{Binding Path=Details}"></TextBlock>
                                    <Button x:Name="btnPauseHost" 
                                        Grid.Row="0"
                                        Grid.Column="1" 
                                        VerticalAlignment="Bottom" 
                                        HorizontalAlignment="Center" 
                                        Height="30" 
                                        Width="30" Click="btnPauseHost_Click">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                                                            <Condition Binding="{Binding IsPaused}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter TargetName="img" Property="Image.Source" Value="{StaticResource ResourceKey=ActivePauseImage}"/>
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False"/>
                                                            <Condition Binding="{Binding IsPaused}" Value="False"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter TargetName="img" Property="Image.Source" Value="{StaticResource ResourceKey=PauseImage}"/>
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True"/>
                                                            <Condition Binding="{Binding IsPaused}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter TargetName="img" Property="Image.Source" Value="{StaticResource ResourceKey=ActiveResumeImage}"/>
                                                    </MultiDataTrigger>

                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False"/>
                                                            <Condition Binding="{Binding IsPaused}" Value="True"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter TargetName="img" Property="Image.Source" Value="{StaticResource ResourceKey=ResumeImage}"/>
                                                    </MultiDataTrigger>
                                                    
                                                </ControlTemplate.Triggers>
                                                <Image x:Name="img"></Image>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                    <StackPanel Grid.Row="0"
                                                Grid.Column="2"
                                                VerticalAlignment="Bottom"
                                                HorizontalAlignment="Right"
                                                Orientation="Horizontal">
                                        <Button x:Name="btnOpenVnc"
                                                Height="20" 
                                                Width="20"
                                                Margin="2,0">
                                            <Button.Template>
                                                <ControlTemplate TargetType="Button">
                                                    <ControlTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False">
                                                            <Setter TargetName="img" Property="Image.Source" Value="../Images/vnc_icon.png"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True">
                                                            <Setter TargetName="img" Property="Image.Source" Value="../Images/act_vnc_icon.png"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsVncServiceAvailable}" Value="False">
                                                            <Setter Property="Button.Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsVncServiceAvailable}" Value="True">
                                                            <Setter Property="Button.Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                    </ControlTemplate.Triggers>
                                                    <Image Source="../Images/vnc_icon.png" x:Name="img"></Image>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button x:Name="btnOpenTelnet"
                                                Height="20" 
                                                Width="20"
                                                Margin="2,0">
                                            <Button.Template>
                                                <ControlTemplate TargetType="Button">
                                                    <ControlTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False">
                                                            <Setter TargetName="img" Property="Image.Source" Value="../Images/shell_icon.png"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True">
                                                            <Setter TargetName="img" Property="Image.Source" Value="../Images/act_shell_icon.png"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsShellServiceAvailable}" Value="False">
                                                            <Setter Property="Button.Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsShellServiceAvailable}" Value="True">
                                                            <Setter Property="Button.Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                    </ControlTemplate.Triggers>
                                                    <Image Source="../Images/shell_icon.png" x:Name="img"></Image>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button x:Name="btnOpenWeb"
                                                Height="20" 
                                                Width="20"
                                                Margin="2,0">
                                            <Button.Template>
                                                <ControlTemplate TargetType="Button">
                                                    <ControlTemplate.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="False">
                                                            <Setter TargetName="img" Property="Image.Source" Value="../Images/browser_icon.png"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}" Value="True">
                                                            <Setter TargetName="img" Property="Image.Source" Value="../Images/act_browser_icon.png"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsWebServiceAvailable}" Value="False">
                                                            <Setter Property="Button.Visibility" Value="Collapsed"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsWebServiceAvailable}" Value="True">
                                                            <Setter Property="Button.Visibility" Value="Visible"></Setter>
                                                        </DataTrigger>
                                                    </ControlTemplate.Triggers>
                                                    <Image Source="../Images/browser_icon.png" x:Name="img"></Image>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                
            </ListBox>
        </ScrollViewer>
  
    </DockPanel>
</Window>